diff --git a/passes/cmds/bugpoint.cc b/passes/cmds/bugpoint.cc
index da06acedf..7af677c6c 100644
--- a/passes/cmds/bugpoint.cc
+++ b/passes/cmds/bugpoint.cc
@@ -504,7 +504,7 @@ struct BugpointPass : public Pass {
 			wires = true;
 		}
 
-		if (!design->full_selection())
+		if (!design->selection().selects_all())
 			log_cmd_error("This command only operates on fully selected designs!\n");
 
 		RTLIL::Design *crashing_design = clean_design(design, clean);
diff --git a/passes/equiv/equiv_opt.cc b/passes/equiv/equiv_opt.cc
index f5eb75730..de807629f 100644
--- a/passes/equiv/equiv_opt.cc
+++ b/passes/equiv/equiv_opt.cc
@@ -142,7 +142,7 @@ struct EquivOptPass:public ScriptPass
 		if (command.empty())
 			log_cmd_error("No optimization pass specified!\n");
 
-		if (!design->full_selection())
+		if (!design->selection().selects_all())
 			log_cmd_error("This command only operates on fully selected designs!\n");
 
 		if (async2sync && multiclock)
diff --git a/passes/sat/cutpoint.cc b/passes/sat/cutpoint.cc
index dcd399a57..fec83709d 100644
--- a/passes/sat/cutpoint.cc
+++ b/passes/sat/cutpoint.cc
@@ -74,7 +74,7 @@ struct CutpointPass : public Pass {
 		extra_args(args, argidx, design);
 
 		if (flag_blackbox) {
-			if (!design->full_selection())
+			if (!design->selection().selects_all())
 				log_cmd_error("This command only operates on fully selected designs!\n");
 			design->push_empty_selection();
 			auto &selection = design->selection();
diff --git a/techlibs/achronix/synth_achronix.cc b/techlibs/achronix/synth_achronix.cc
index 2b969182e..1fd809f94 100644
--- a/techlibs/achronix/synth_achronix.cc
+++ b/techlibs/achronix/synth_achronix.cc
@@ -107,7 +107,7 @@ struct SynthAchronixPass : public ScriptPass {
       }
     extra_args(args, argidx, design);
 
-    if (!design->full_selection())
+    if (!design->selection().selects_all())
       log_cmd_error("This command only operates on fully selected designs!\n");
 
     log_header(design, "Executing SYNTH_ACHRONIX pass.\n");
diff --git a/techlibs/anlogic/synth_anlogic.cc b/techlibs/anlogic/synth_anlogic.cc
index c72e7f2a1..56fc061b3 100644
--- a/techlibs/anlogic/synth_anlogic.cc
+++ b/techlibs/anlogic/synth_anlogic.cc
@@ -134,7 +134,7 @@ struct SynthAnlogicPass : public ScriptPass
 		}
 		extra_args(args, argidx, design);
 
-		if (!design->full_selection())
+		if (!design->selection().selects_all())
 			log_cmd_error("This command only operates on fully selected designs!\n");
 
 		log_header(design, "Executing SYNTH_ANLOGIC pass.\n");
diff --git a/techlibs/common/prep.cc b/techlibs/common/prep.cc
index e9176304d..a7bd5a223 100644
--- a/techlibs/common/prep.cc
+++ b/techlibs/common/prep.cc
@@ -152,7 +152,7 @@ struct PrepPass : public ScriptPass
 		}
 		extra_args(args, argidx, design);
 
-		if (!design->full_selection())
+		if (!design->selection().selects_all())
 			log_cmd_error("This command only operates on fully selected designs!\n");
 
 		log_header(design, "Executing PREP pass.\n");
diff --git a/techlibs/common/synth.cc b/techlibs/common/synth.cc
index 8b4561c34..d05437d03 100644
--- a/techlibs/common/synth.cc
+++ b/techlibs/common/synth.cc
@@ -215,7 +215,7 @@ struct SynthPass : public ScriptPass {
 		}
 		extra_args(args, argidx, design);
 
-		if (!design->full_selection())
+		if (!design->selection().selects_all())
 			log_cmd_error("This command only operates on fully selected designs!\n");
 
 		if (abc == "abc9" && !lut)
@@ -287,7 +287,7 @@ struct SynthPass : public ScriptPass {
 			run("memory_map");
 			run("opt -full");
 			if (help_mode) {
-				run("techmap", "                  (unless -extra-map)");	
+				run("techmap", "                  (unless -extra-map)");
 				run("techmap -map +/techmap.v -map <inject>", "  (if -extra-map)");
 			} else {
 				std::string techmap_opts;
diff --git a/techlibs/coolrunner2/synth_coolrunner2.cc b/techlibs/coolrunner2/synth_coolrunner2.cc
index a746ac222..73400a8f5 100644
--- a/techlibs/coolrunner2/synth_coolrunner2.cc
+++ b/techlibs/coolrunner2/synth_coolrunner2.cc
@@ -110,7 +110,7 @@ struct SynthCoolrunner2Pass : public ScriptPass
 		}
 		extra_args(args, argidx, design);
 
-		if (!design->full_selection())
+		if (!design->selection().selects_all())
 			log_cmd_error("This command only operates on fully selected designs!\n");
 
 		log_header(design, "Executing SYNTH_COOLRUNNER2 pass.\n");
diff --git a/techlibs/easic/synth_easic.cc b/techlibs/easic/synth_easic.cc
index 50526a9ea..14de4b655 100644
--- a/techlibs/easic/synth_easic.cc
+++ b/techlibs/easic/synth_easic.cc
@@ -116,7 +116,7 @@ struct SynthEasicPass : public ScriptPass
 		}
 		extra_args(args, argidx, design);
 
-		if (!design->full_selection())
+		if (!design->selection().selects_all())
 			log_cmd_error("This command only operates on fully selected designs!\n");
 
 		log_header(design, "Executing SYNTH_EASIC pass.\n");
diff --git a/techlibs/ecp5/synth_ecp5.cc b/techlibs/ecp5/synth_ecp5.cc
index 6e518f5d1..f3c85aa39 100644
--- a/techlibs/ecp5/synth_ecp5.cc
+++ b/techlibs/ecp5/synth_ecp5.cc
@@ -247,7 +247,7 @@ struct SynthEcp5Pass : public ScriptPass
 		}
 		extra_args(args, argidx, design);
 
-		if (!design->full_selection())
+		if (!design->selection().selects_all())
 			log_cmd_error("This command only operates on fully selected designs!\n");
 
 		if (abc9 && retime)
diff --git a/techlibs/efinix/synth_efinix.cc b/techlibs/efinix/synth_efinix.cc
index 419bc2f88..0bbf32130 100644
--- a/techlibs/efinix/synth_efinix.cc
+++ b/techlibs/efinix/synth_efinix.cc
@@ -126,7 +126,7 @@ struct SynthEfinixPass : public ScriptPass
 		}
 		extra_args(args, argidx, design);
 
-		if (!design->full_selection())
+		if (!design->selection().selects_all())
 			log_cmd_error("This command only operates on fully selected designs!\n");
 
 		log_header(design, "Executing SYNTH_EFINIX pass.\n");
diff --git a/techlibs/fabulous/synth_fabulous.cc b/techlibs/fabulous/synth_fabulous.cc
index 8d2fb1471..4a340dad3 100644
--- a/techlibs/fabulous/synth_fabulous.cc
+++ b/techlibs/fabulous/synth_fabulous.cc
@@ -247,7 +247,7 @@ struct SynthPass : public ScriptPass
 		}
 		extra_args(args, argidx, design);
 
-		if (!design->full_selection())
+		if (!design->selection().selects_all())
 			log_cmd_error("This command only operates on fully selected designs!\n");
 
 		log_header(design, "Executing SYNTH_FABULOUS pass.\n");
diff --git a/techlibs/gatemate/synth_gatemate.cc b/techlibs/gatemate/synth_gatemate.cc
index fa36252f5..95e4748b5 100644
--- a/techlibs/gatemate/synth_gatemate.cc
+++ b/techlibs/gatemate/synth_gatemate.cc
@@ -186,7 +186,7 @@ struct SynthGateMatePass : public ScriptPass
 		}
 		extra_args(args, argidx, design);
 
-		if (!design->full_selection()) {
+		if (!design->selection().selects_all()) {
 			log_cmd_error("This command only operates on fully selected designs!\n");
 		}
 
diff --git a/techlibs/gowin/synth_gowin.cc b/techlibs/gowin/synth_gowin.cc
index 484b88b94..674fe8b45 100644
--- a/techlibs/gowin/synth_gowin.cc
+++ b/techlibs/gowin/synth_gowin.cc
@@ -197,7 +197,7 @@ struct SynthGowinPass : public ScriptPass
 		}
 		extra_args(args, argidx, design);
 
-		if (!design->full_selection())
+		if (!design->selection().selects_all())
 			log_cmd_error("This command only operates on fully selected designs!\n");
 
 		log_header(design, "Executing SYNTH_GOWIN pass.\n");
diff --git a/techlibs/greenpak4/synth_greenpak4.cc b/techlibs/greenpak4/synth_greenpak4.cc
index a9f7db679..8fc4512f8 100644
--- a/techlibs/greenpak4/synth_greenpak4.cc
+++ b/techlibs/greenpak4/synth_greenpak4.cc
@@ -119,7 +119,7 @@ struct SynthGreenPAK4Pass : public ScriptPass
 		}
 		extra_args(args, argidx, design);
 
-		if (!design->full_selection())
+		if (!design->selection().selects_all())
 			log_cmd_error("This command only operates on fully selected designs!\n");
 
 		if (part != "SLG46140V" && part != "SLG46620V" && part != "SLG46621V")
diff --git a/techlibs/ice40/synth_ice40.cc b/techlibs/ice40/synth_ice40.cc
index 818323892..4a31dd469 100644
--- a/techlibs/ice40/synth_ice40.cc
+++ b/techlibs/ice40/synth_ice40.cc
@@ -262,7 +262,7 @@ struct SynthIce40Pass : public ScriptPass
 		}
 		extra_args(args, argidx, design);
 
-		if (!design->full_selection())
+		if (!design->selection().selects_all())
 			log_cmd_error("This command only operates on fully selected designs!\n");
 		if (device_opt != "hx" && device_opt != "lp" && device_opt !="u")
 			log_cmd_error("Invalid or no device specified: '%s'\n", device_opt.c_str());
diff --git a/techlibs/intel/synth_intel.cc b/techlibs/intel/synth_intel.cc
index 11567ece9..5a2917a80 100644
--- a/techlibs/intel/synth_intel.cc
+++ b/techlibs/intel/synth_intel.cc
@@ -164,7 +164,7 @@ struct SynthIntelPass : public ScriptPass {
 		}
 		extra_args(args, argidx, design);
 
-		if (!design->full_selection())
+		if (!design->selection().selects_all())
 			log_cmd_error("This command only operates on fully selected designs!\n");
 
 		if (family_opt == "cyclonev")
diff --git a/techlibs/intel_alm/synth_intel_alm.cc b/techlibs/intel_alm/synth_intel_alm.cc
index cdae9586e..1fe61961d 100644
--- a/techlibs/intel_alm/synth_intel_alm.cc
+++ b/techlibs/intel_alm/synth_intel_alm.cc
@@ -149,7 +149,7 @@ struct SynthIntelALMPass : public ScriptPass {
 		}
 		extra_args(args, argidx, design);
 
-		if (!design->full_selection())
+		if (!design->selection().selects_all())
 			log_cmd_error("This command only operates on fully selected designs!\n");
 
 		log_header(design, "Executing SYNTH_INTEL_ALM pass.\n");
diff --git a/techlibs/lattice/synth_lattice.cc b/techlibs/lattice/synth_lattice.cc
index 16a068b07..32f344e62 100644
--- a/techlibs/lattice/synth_lattice.cc
+++ b/techlibs/lattice/synth_lattice.cc
@@ -308,7 +308,7 @@ struct SynthLatticePass : public ScriptPass
 		} else
 			log_cmd_error("Invalid Lattice -family setting: '%s'.\n", family.c_str());
 
-		if (!design->full_selection())
+		if (!design->selection().selects_all())
 			log_cmd_error("This command only operates on fully selected designs!\n");
 
 		if (abc9 && retime)
diff --git a/techlibs/microchip/synth_microchip.cc b/techlibs/microchip/synth_microchip.cc
index 727bf9ac6..f55f6bbb4 100644
--- a/techlibs/microchip/synth_microchip.cc
+++ b/techlibs/microchip/synth_microchip.cc
@@ -237,7 +237,7 @@ struct SynthMicrochipPass : public ScriptPass {
 			log_cmd_error("Invalid Microchip -family setting: '%s'.\n", family.c_str());
 		}
 
-		if (!design->full_selection())
+		if (!design->selection().selects_all())
 			log_cmd_error("This command only operates on fully selected designs!\n");
 
 		if (abc9 && retime)
diff --git a/techlibs/nanoxplore/synth_nanoxplore.cc b/techlibs/nanoxplore/synth_nanoxplore.cc
index 4674559fb..f7c8dd61e 100644
--- a/techlibs/nanoxplore/synth_nanoxplore.cc
+++ b/techlibs/nanoxplore/synth_nanoxplore.cc
@@ -220,7 +220,7 @@ struct SynthNanoXplorePass : public ScriptPass
 		} else 
 			log_cmd_error("Invalid NanoXplore -family setting: '%s'.\n", family.c_str());
 
-		if (!design->full_selection())
+		if (!design->selection().selects_all())
 			log_cmd_error("This command only operates on fully selected designs!\n");
 
 		log_header(design, "Executing SYNTH_NANOXPLORE pass.\n");
diff --git a/techlibs/nexus/synth_nexus.cc b/techlibs/nexus/synth_nexus.cc
index 2935fbd3b..ecf826e63 100644
--- a/techlibs/nexus/synth_nexus.cc
+++ b/techlibs/nexus/synth_nexus.cc
@@ -215,7 +215,7 @@ struct SynthNexusPass : public ScriptPass
 		}
 		extra_args(args, argidx, design);
 
-		if (!design->full_selection())
+		if (!design->selection().selects_all())
 			log_cmd_error("This command only operates on fully selected designs!\n");
 
 		if (abc9 && retime)
diff --git a/techlibs/quicklogic/synth_quicklogic.cc b/techlibs/quicklogic/synth_quicklogic.cc
index 07ec769b5..75c7fe4cd 100644
--- a/techlibs/quicklogic/synth_quicklogic.cc
+++ b/techlibs/quicklogic/synth_quicklogic.cc
@@ -167,7 +167,7 @@ struct SynthQuickLogicPass : public ScriptPass {
 		}
 		extra_args(args, argidx, design);
 
-		if (!design->full_selection())
+		if (!design->selection().selects_all())
 			log_cmd_error("This command only operates on fully selected designs!\n");
 
 		if (family != "pp3" && family != "qlf_k6n10f")
@@ -333,7 +333,7 @@ struct SynthQuickLogicPass : public ScriptPass {
 			run("clean");
 			run("opt_lut");
 		}
-		
+
 		if (check_label("iomap", "(for qlf_k6n10f, skip if -noioff)") && (family == "qlf_k6n10f" || help_mode)) {
 			if (ioff || help_mode) {
 				run("ql_ioff");
diff --git a/techlibs/sf2/synth_sf2.cc b/techlibs/sf2/synth_sf2.cc
index bf4a6e031..6f6e86529 100644
--- a/techlibs/sf2/synth_sf2.cc
+++ b/techlibs/sf2/synth_sf2.cc
@@ -150,7 +150,7 @@ struct SynthSf2Pass : public ScriptPass
 		}
 		extra_args(args, argidx, design);
 
-		if (!design->full_selection())
+		if (!design->selection().selects_all())
 			log_cmd_error("This command only operates on fully selected designs!\n");
 
 		log_header(design, "Executing SYNTH_SF2 pass.\n");
diff --git a/techlibs/xilinx/synth_xilinx.cc b/techlibs/xilinx/synth_xilinx.cc
index 505026fe8..3af978725 100644
--- a/techlibs/xilinx/synth_xilinx.cc
+++ b/techlibs/xilinx/synth_xilinx.cc
@@ -323,7 +323,7 @@ struct SynthXilinxPass : public ScriptPass
 		if (widemux != 0 && widemux < 2)
 			log_cmd_error("-widemux value must be 0 or >= 2.\n");
 
-		if (!design->full_selection())
+		if (!design->selection().selects_all())
 			log_cmd_error("This command only operates on fully selected designs!\n");
 
 		if (abc9 && retime)
