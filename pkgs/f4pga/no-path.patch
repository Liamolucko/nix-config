diff --git a/f4pga/flows/commands.py b/f4pga/flows/commands.py
index 468bd37..963cc84 100644
--- a/f4pga/flows/commands.py
+++ b/f4pga/flows/commands.py
@@ -135,11 +135,11 @@ def setup_resolution_env():
         Generate initial values, available in configs.
         """
         conf = {
-            "python3": common_sub("which", "python3").decode().replace("\n", ""),
+            "python3": "@wrappedPython@",
             "noisyWarnings": _noisy_warnings(),
         }
         if FPGA_FAM == "xc7":
-            conf["prjxray_db"] = common_sub("prjxray-config").decode().replace("\n", "")
+            conf["prjxray_db"] = "@prjxray-db@"
 
         return conf
 
diff --git a/f4pga/flows/common.py b/f4pga/flows/common.py
index f2efe8f..632a355 100644
--- a/f4pga/flows/common.py
+++ b/f4pga/flows/common.py
@@ -183,7 +183,7 @@ def vpr(mode: str, vprargs: VprArgs, cwd=None):
     return sub(
         *(
             [
-                "vpr",
+                "@vtr@/bin/vpr",
                 vprargs.arch_def,
                 vprargs.eblif,
                 "--device",
diff --git a/f4pga/flows/common_modules/fasm.py b/f4pga/flows/common_modules/fasm.py
index 925bf22..79e0cf7 100644
--- a/f4pga/flows/common_modules/fasm.py
+++ b/f4pga/flows/common_modules/fasm.py
@@ -40,7 +40,7 @@ class FasmModule(Module):
             optional += ["--sdc", ctx.takes.sdc]
 
         s = [
-            "genfasm",
+            "@vtr@/bin/genfasm",
             vprargs.arch_def,
             str(Path(ctx.takes.eblif).resolve()),
             "--device",
diff --git a/f4pga/flows/common_modules/place_constraints.py b/f4pga/flows/common_modules/place_constraints.py
index 1eababf..171da6c 100644
--- a/f4pga/flows/common_modules/place_constraints.py
+++ b/f4pga/flows/common_modules/place_constraints.py
@@ -34,7 +34,7 @@ class PlaceConstraintsModule(Module):
                 common_sub(
                     *(
                         [
-                            "python3",
+                            "@wrappedPython@",
                             ctx.values.script,
                             "--net",
                             ctx.takes.net,
@@ -45,7 +45,7 @@ class PlaceConstraintsModule(Module):
                             "--input",
                             ctx.takes.io_place,
                             "--db_root",
-                            common_sub("prjxray-config").decode().replace("\n", ""),
+                            "@prjxray-db@",
                             "--part",
                             ctx.values.part_name,
                         ]
diff --git a/f4pga/flows/common_modules/synth.py b/f4pga/flows/common_modules/synth.py
index 6fae1aa..fb661f0 100755
--- a/f4pga/flows/common_modules/synth.py
+++ b/f4pga/flows/common_modules/synth.py
@@ -72,7 +72,7 @@ class SynthModule(Module):
         common_sub(
             *(
                 [
-                    "yosys",
+                    "@yosys@",
                     "-p",
                     (
                         " ".join([f"read_verilog {args_str} {vfile};" for vfile in ctx.takes.sources])
diff --git a/f4pga/flows/platforms.yml b/f4pga/flows/platforms.yml
index 4313795..d9db606 100644
--- a/f4pga/flows/platforms.yml
+++ b/f4pga/flows/platforms.yml
@@ -131,7 +131,7 @@ xc7a50t: &xc7
       module: 'common:generic_script_wrapper'
       params:
         stage_name: bitstream
-        script: xcfasm
+        script: '@xcfasm@'
         outputs:
           bitstream:
             mode: file
@@ -144,7 +144,7 @@ xc7a50t: &xc7
           sparse: true
           emit_pudc_b_pullup: true
           fn_in: '${:fasm}'
-          frm2bit: xc7frames2bit
+          frm2bit: '@xc7frames2bit@'
           bit_out: '${:fasm[noext]}.bit'
 
 
diff --git a/f4pga/utils/xc7/create_place_constraints.py b/f4pga/utils/xc7/create_place_constraints.py
index 5ee85d9..af827a1 100644
--- a/f4pga/utils/xc7/create_place_constraints.py
+++ b/f4pga/utils/xc7/create_place_constraints.py
@@ -1128,7 +1128,7 @@ def main(
         vpr_grid_map=vpr_grid_map,
         arch=arch,
         db_root=environ.get(
-            "DATABASE_DIR", subprocess_run("prjxray-config", capture_output=True).stdout.decode("utf-8").strip()
+            "DATABASE_DIR", "@prjxray-db@"
         )
         if db_root is None
         else db_root,
diff --git a/f4pga/wrappers/sh/__init__.py b/f4pga/wrappers/sh/__init__.py
index b134a08..b019ee3 100644
--- a/f4pga/wrappers/sh/__init__.py
+++ b/f4pga/wrappers/sh/__init__.py
@@ -29,7 +29,7 @@ from argparse import ArgumentParser, RawDescriptionHelpFormatter
 from f4pga.context import FPGA_FAM, F4PGA_SHARE_DIR
 
 
-python3 = which("python3")
+python3 = "@wrappedPython@"
 
 ROOT = Path(__file__).resolve().parent
 
@@ -119,7 +119,7 @@ def p_vpr_run(args, env=environ):
         sdc = None
 
     check_call(
-        [which("vpr"), arg_arch_def, arg_eblif]
+        ["@vtr@/bin/vpr", arg_arch_def, arg_eblif]
         + p_args_str2list(arg_vpr_options)
         + [
             "--device",
@@ -509,27 +509,27 @@ def place():
 if [ -z $NET ]; then echo "Please provide net file name"; exit 1; fi
 """
     if isQuickLogic:
-        place_cmds += """
+        place_cmds += f"""
 if [ -z $PCF ]; then echo "Please provide pcf file name"; exit 1; fi
 PROJECT=$(basename -- "$EBLIF")
-PROJECT="${PROJECT%.*}"
-VPR_PLACE_FILE="${PROJECT}_constraints.place"
+PROJECT="${{PROJECT%.*}}"
+VPR_PLACE_FILE="${{PROJECT}}_constraints.place"
 if [ -s $PCF ]; then
   echo "Generating constraints ..."
-  python3 -m f4pga.wrappers.sh.generate_constraints $PCF $EBLIF $NET $PART $DEVICE $ARCH_DEF $CORNER
-  if [ ! -f ${VPR_PLACE_FILE} ]; then VPR_PLACE_FILE="${PROJECT}_io.place"; fi
+  '{python3}' -m f4pga.wrappers.sh.generate_constraints $PCF $EBLIF $NET $PART $DEVICE $ARCH_DEF $CORNER
+  if [ ! -f ${{VPR_PLACE_FILE}} ]; then VPR_PLACE_FILE="${{PROJECT}}_io.place"; fi
 else
   # Make a dummy empty constraint file
-  touch ${VPR_PLACE_FILE}
+  touch ${{VPR_PLACE_FILE}}
 fi
 """
     else:
-        place_cmds += """
+        place_cmds += f"""
 echo "Generating constrains ..."
-python3 -m f4pga.wrappers.sh.generate_constraints $EBLIF $NET $PART $DEVICE $ARCH_DEF $PCF
+'{python3}' -m f4pga.wrappers.sh.generate_constraints $EBLIF $NET $PART $DEVICE $ARCH_DEF $PCF
 VPR_PLACE_FILE='constraints.place'
 """
-    place_cmds += 'python3 -m f4pga.wrappers.sh.vpr_run --fix_clusters "${VPR_PLACE_FILE}" --place'
+    place_cmds += f'\'{python3}\' -m f4pga.wrappers.sh.vpr_run --fix_clusters "${{VPR_PLACE_FILE}}" --place'
     p_run_bash_cmds(place_cmds, env=p_vpr_env_from_args("place"))
     Path("vpr_stdout.log").rename("place.log")
 
@@ -575,7 +575,7 @@ def write_fasm(genfasm_extra_args=None):
     print("[F4PGA] Running (deprecated) write fasm")
     p_run_bash_cmds(
         f"""
-'{which('genfasm')}' \
+'@vtr@/bin/genfasm' \
   ${{ARCH_DEF}} ${{EBLIF}} --device ${{DEVICE_NAME}} \
   ${{VPR_OPTIONS}} \
   --read_rr_graph ${{RR_GRAPH}} {' '.join(genfasm_extra_args) if genfasm_extra_args is not None else ''}
@@ -607,7 +607,7 @@ if [ ! -z ${FRAMES2BIT} ]; then FRM2BIT="--frm2bit ${FRAMES2BIT}"; fi
 """
         + f"""
 eval set -- $(
-  getopt \
+  '@getopt@' \
     --options=d:f:b:p: \
     --longoptions=device:,fasm:,bit:,part: \
     --name $0 -- {' '.join(sys_argv[1:])}
@@ -627,7 +627,7 @@ while true; do
     --) break ;;
   esac
 done
-DATABASE_DIR=${DATABASE_DIR:-$(prjxray-config)}
+DATABASE_DIR=${DATABASE_DIR:-@prjxray-db@}
 if [ -z $DEVICE ]; then
   # Try to find device name. Accept only when exactly one is found
   PART_DIRS=(${DATABASE_DIR}/*/${PART})
@@ -641,7 +641,7 @@ fi
 DBROOT=`realpath ${DATABASE_DIR}/${DEVICE}`
 if [ -z $FASM ]; then echo "Please provide fasm file name"; exit 1; fi
 if [ -z $BIT ]; then echo "Please provide bit file name"; exit 1; fi
-xcfasm \
+'@xcfasm@' \
   --db-root ${DBROOT} \
   --part ${PART} \
   --part_file ${DBROOT}/${PART}/part.yaml \
diff --git a/f4pga/wrappers/sh/quicklogic/ql.f4pga.sh b/f4pga/wrappers/sh/quicklogic/ql.f4pga.sh
index b22f86a..c935eab 100755
--- a/f4pga/wrappers/sh/quicklogic/ql.f4pga.sh
+++ b/f4pga/wrappers/sh/quicklogic/ql.f4pga.sh
@@ -339,7 +339,7 @@ all: \${BUILDDIR}/\${TOP}.${RUN_TILL}\n\
 	cd \${BUILDDIR} && symbiflow_synth -t \${TOP} -v \${VERILOG} -F \${FAMILY} -d \${DEVICE} -p \${PCF} -P \${PART} ${COMPILE_EXTRA_ARGS[*]} > $LOG_FILE 2>&1\n\
 \n\
 \${BUILDDIR}/\${TOP}.sdc: \${BUILDDIR}/\${TOP}.eblif\n\
-	python3 -m f4pga.utils.quicklogic.process_sdc_constraints --sdc-in \${SDC_IN} --sdc-out \$@ --pcf \${PCF} --eblif \${BUILDDIR}/\${TOP}.eblif --pin-map \${PINMAP_CSV}\n\
+	'@wrappedPython@' -m f4pga.utils.quicklogic.process_sdc_constraints --sdc-in \${SDC_IN} --sdc-out \$@ --pcf \${PCF} --eblif \${BUILDDIR}/\${TOP}.eblif --pin-map \${PINMAP_CSV}\n\
 \n\
 \${BUILDDIR}/\${TOP}.net: \${BUILDDIR}/\${TOP}.eblif \${BUILDDIR}/\${TOP}.sdc\n\
 	cd \${BUILDDIR} && symbiflow_pack -e \${TOP}.eblif -f \${FAMILY} -d \${DEVICE} -s \${SDC} -c \${PNR_CORNER} >> $LOG_FILE 2>&1\n\
diff --git a/f4pga/wrappers/sh/quicklogic/synth.f4pga.sh b/f4pga/wrappers/sh/quicklogic/synth.f4pga.sh
index 232f67f..3639831 100755
--- a/f4pga/wrappers/sh/quicklogic/synth.f4pga.sh
+++ b/f4pga/wrappers/sh/quicklogic/synth.f4pga.sh
@@ -79,7 +79,7 @@ export SYNTH_JSON=${TOP}_io.json
 export OUT_SYNTH_V=${TOP}_synth.v
 export OUT_EBLIF=${TOP}.eblif
 export OUT_FASM_EXTRA=${TOP}_fasm_extra.fasm
-export PYTHON3=$(which python3)
+export PYTHON3=@wrappedPython@
 
 if [ -s $PCF ]; then
   export PCF_FILE=$PCF
@@ -107,7 +107,7 @@ else
   fi
 fi
 
-yosys_cmds=`echo ${EXTRA_ARGS[*]} | python3 -m f4pga.utils.quicklogic.convert_compile_opts`
+yosys_cmds=`echo ${EXTRA_ARGS[*]} | '@wrappedPython@' -m f4pga.utils.quicklogic.convert_compile_opts`
 if [ ! -z "${yosys_cmds}" ]; then yosys_cmds="${yosys_cmds//$'\n'/'; '}; "; fi
 
 yosys_read_cmds=''
@@ -115,6 +115,6 @@ for f in ${VERILOG_FILES[*]}; do
   yosys_read_cmds="read_verilog ${f}; $yosys_read_cmds"
 done
 
-`which yosys` \
-  -p "$yosys_cmds $yosys_read_cmds tcl $(python3 -m f4pga.wrappers.tcl "${FAMILY}")" \
+'@yosys@' \
+  -p "$yosys_cmds $yosys_read_cmds tcl $('@wrappedPython@' -m f4pga.wrappers.tcl "${FAMILY}")" \
   -l "${TOP}_synth.log"
diff --git a/f4pga/wrappers/sh/xc7/synth.f4pga.sh b/f4pga/wrappers/sh/xc7/synth.f4pga.sh
index 6848e69..3f411a7 100755
--- a/f4pga/wrappers/sh/xc7/synth.f4pga.sh
+++ b/f4pga/wrappers/sh/xc7/synth.f4pga.sh
@@ -74,9 +74,9 @@ export OUT_SDC="${TOP}.sdc"
 export SYNTH_JSON="${TOP}_io.json"
 export OUT_SYNTH_V="${TOP}_synth.v"
 export OUT_EBLIF="${TOP}.eblif"
-export PART_JSON=`realpath ${DATABASE_DIR:-$(prjxray-config)}/$DEVICE/$PART/part.json`
+export PART_JSON=`realpath ${DATABASE_DIR:-@prjxray-db@}/$DEVICE/$PART/part.json`
 export OUT_FASM_EXTRA="${TOP}_fasm_extra.fasm"
-export PYTHON3="${PYTHON3:-$(which python3)}"
+export PYTHON3=@wrappedPython@
 
 yosys_read_cmds=""
 yosys_files="${VERILOG_FILES[*]}"
@@ -84,7 +84,7 @@ if [ -n "$SURELOG_CMD" ]; then
   yosys_read_cmds="plugin -i uhdm; read_verilog_with_uhdm ${SURELOG_CMD[*]} ${VERILOG_FILES[*]}"
   yosys_files=""
 fi
-yosys \
-  -p "$yosys_read_cmds; tcl $(python3 -m f4pga.wrappers.tcl)" \
+'@yosys@' \
+  -p "$yosys_read_cmds; tcl $('@wrappedPython@' -m f4pga.wrappers.tcl)" \
   -l "${TOP}_synth.log" \
   $yosys_files
