diff --git a/test/run_benchmarks.py b/test/run_benchmarks.py
index 0a7c38b..dc49df2 100755
--- a/test/run_benchmarks.py
+++ b/test/run_benchmarks.py
@@ -494,7 +494,7 @@ class RunCache(list):
 
 
 def run_python(script, args, **kwargs):
-    command = ["python3", script, *args]
+    command = [sys.executable, script, *args]
     proc = subprocess.run(command, stdout=subprocess.PIPE, cwd=os.path.dirname(script), **kwargs)
     return str(proc.stdout)
 
diff --git a/test/test_examples.py b/test/test_examples.py
index 43faa78..a1c4226 100644
--- a/test/test_examples.py
+++ b/test/test_examples.py
@@ -6,12 +6,13 @@
 
 import unittest
 import os
+import sys
 
 
 def build_config(name):
     errors = 0
     os.system(f"rm -rf examples/{name}")
-    os.system(f"mkdir -p examples/{name} && cd examples/{name} && python3 ../../litedram/gen.py ../{name}.yml")
+    os.system(f"mkdir -p examples/{name} && cd examples/{name} && {sys.executable} ../../litedram/gen.py ../{name}.yml")
     errors += not os.path.isfile(f"examples/{name}/build/gateware/litedram_core.v")
     os.system(f"rm -rf examples/{name}")
     return errors
diff --git a/test/test_lpddr4.py b/test/test_lpddr4.py
index aac23bb..0101e44 100644
--- a/test/test_lpddr4.py
+++ b/test/test_lpddr4.py
@@ -6,6 +6,7 @@
 
 import re
 import copy
+import sys
 import unittest
 from typing import Mapping
 from functools import partial
@@ -673,7 +674,7 @@ class VerilatorLPDDR4Tests(unittest.TestCase):
     def run_test(self, args, **kwargs):
         import pexpect
 
-        command = ["python3", simsoc.__file__, *args]
+        command = [sys.executable, simsoc.__file__, *args]
         timeout = 12 * 60  # give more than enough time
         p = pexpect.spawn(" ".join(command), timeout=timeout, **kwargs)
 
diff --git a/test/test_lpddr5.py b/test/test_lpddr5.py
index 504098c..11ca529 100644
--- a/test/test_lpddr5.py
+++ b/test/test_lpddr5.py
@@ -4,6 +4,7 @@
 # Copyright (c) 2021 Antmicro <www.antmicro.com>
 # SPDX-License-Identifier: BSD-2-Clause
 
+import sys
 import unittest
 from typing import Mapping
 from collections import defaultdict
@@ -730,7 +731,7 @@ class VerilatorLPDDR5Tests(unittest.TestCase):
     def run_test(self, args, allowed=None, **kwargs):
         import pexpect
 
-        command = ["python3", simsoc.__file__, *args]
+        command = [sys.executable, simsoc.__file__, *args]
         timeout = 12 * 60  # give more than enough time
         p = pexpect.spawn(" ".join(command), timeout=timeout, **kwargs)
 
