diff --git a/crates/muvm/src/env.rs b/crates/muvm/src/env.rs
index 89f73e1..cabc418 100644
--- a/crates/muvm/src/env.rs
+++ b/crates/muvm/src/env.rs
@@ -12,7 +12,7 @@ use crate::utils::env::find_in_path;
 
 /// Automatically pass these environment variables to the microVM, if they are
 /// set.
-const WELL_KNOWN_ENV_VARS: [&str; 20] = [
+const WELL_KNOWN_ENV_VARS: [&str; 21] = [
     "LANG",
     "LC_ADDRESS",
     "LC_ALL",
@@ -33,6 +33,7 @@ const WELL_KNOWN_ENV_VARS: [&str; 20] = [
     "PATH",                        // needed by `muvm-guest` program
     "RUST_LOG",
     "XMODIFIERS",
+    "OPENGL_DRIVER", // needed for OpenGL on NixOS
 ];
 
 /// See https://github.com/AsahiLinux/docs/wiki/Devices
diff --git a/crates/muvm/src/guest/mount.rs b/crates/muvm/src/guest/mount.rs
index 3126ca0..2bcb157 100644
--- a/crates/muvm/src/guest/mount.rs
+++ b/crates/muvm/src/guest/mount.rs
@@ -1,5 +1,6 @@
+use std::env::var_os;
 use std::ffi::CString;
-use std::fs::{read_dir, File};
+use std::fs::{create_dir_all, read_dir, File};
 use std::io::Write;
 use std::os::fd::AsFd;
 use std::path::Path;
@@ -7,8 +8,8 @@ use std::path::Path;
 use anyhow::{Context, Result};
 use rustix::fs::{mkdir, symlink, Mode, CWD};
 use rustix::mount::{
-    mount2, mount_bind, move_mount, open_tree, unmount, MountFlags, MoveMountFlags, OpenTreeFlags,
-    UnmountFlags,
+    mount2, mount_bind, mount_recursive_bind, move_mount, open_tree, unmount, MountFlags,
+    MoveMountFlags, OpenTreeFlags, UnmountFlags,
 };
 
 fn make_tmpfs(dir: &str) -> Result<()> {
@@ -141,6 +142,13 @@ pub fn mount_filesystems() -> Result<()> {
 
     place_etc("resolv.conf", None)?;
 
+    let opengl_driver = var_os("OPENGL_DRIVER");
+    if let Some(dir) = opengl_driver {
+        create_dir_all("/run/opengl-driver")?;
+        mount_recursive_bind(dir, "/run/opengl-driver")
+            .context("Failed to mount `/run/opengl-driver`")?;
+    }
+
     mount2(
         Some("binfmt_misc"),
         "/proc/sys/fs/binfmt_misc",
